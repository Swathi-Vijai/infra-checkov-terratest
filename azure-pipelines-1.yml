trigger:  
  branches:
     include:
       - none
pr:
 branches:
     include:
       - none

pool:
  vmImage: ubuntu-latest

stages:
- stage: validate
  jobs:

    - job: validate
      displayName: 'Init tf and Validate'
      steps:
        - task: TerraformInstaller@0
          displayName: 'Install Terraform'
          inputs:
            terraformVersion: 'latest'
        - task: TerraformTaskV3@3
          displayName: 'Terraform Init'
          inputs:
            provider: 'azurerm'
            command: 'init'
            backendAzureRmResourceGroupName: 'Devops-RG'
            backendAzureRmStorageAccountName: 'devopstrainingstorage'
            backendAzureRmContainerName: 'swathi-tfstate-asgmt'
            backendAzureRmKey: 'infra-checkov-test1.tfstate'
            backendServiceArm: 'az-asgmts'
            workingDirectory: $(System.DefaultWorkingDirectory)/Terraform
        # need to modify as generic

        - task: TerraformTaskV3@3
          displayName: 'Terraform Validate'
          inputs:
            command: 'validate'
            provider: 'azurerm'
            workingDirectory: $(System.DefaultWorkingDirectory)/Terraform
            environmentServiceNameAzureRM: 'az-asgmts'

- stage: dev
  dependsOn: validate
  jobs:
    - deployment: Deploy
      environment: Dev
      strategy:
        runOnce:
          deploy:
            steps:
              - checkout: self
              - task: TerraformInstaller@0
                displayName: 'Install Terraform'
                inputs:
                  terraformVersion: 'latest'

              - task: TerraformTaskV3@3
                displayName: 'Terraform Init'
                inputs:
                  provider: 'azurerm'
                  command: 'init'
                  backendAzureRmResourceGroupName: 'Devops-RG'
                  backendAzureRmStorageAccountName: 'devopstrainingstorage'
                  backendAzureRmContainerName: 'swathi-tfstate-asgmt'
                  backendAzureRmKey: 'infra-checkov-test1.tfstate'
                  backendServiceArm: 'az-asgmts'
                  workingDirectory: $(System.DefaultWorkingDirectory)/Terraform

              - task: TerraformTaskV3@3
                displayName: 'Terraform Plan'
                inputs:
                  provider: 'azurerm'
                  command: 'plan'
                  #commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/parameter.json"'
                  environmentServiceNameAzureRM: 'az-asgmts'

              - task: TerraformTaskV3@3
                inputs:
                        provider: 'azurerm'
                        command: 'apply'
                        #commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/parameter.json"'
                        environmentServiceNameAzureRM: 'az-asgmts'
              - task: TerraformTaskV3@3
                inputs:
                  provider: 'azurerm'
                  command: 'destroy'
                  #commandOptions: '--var-file="$(System.DefaultWorkingDirectory)/parameter.json"'
                  environmentServiceNameAzureRM: 'az-asgmts'
